module.exports = {
    root: true,
    extends: "@react-native-community",
    env: {
        es6: true,
        browser: true,
    },
    extends: [
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier/@typescript-eslint",
        "plugin:prettier/recommended",
    ],
    globals: {
        Atomics: "readonly",
        SharedArrayBuffer: "readonly",
    },
    parser: "@typescript-eslint/parser",
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: 2018,
        sourceType: "module",
    },
    plugins: ["react", "react-hooks", "@typescript-eslint", "prettier"],
    rules: {
        "prettier/prettier": "error",
        "react/jsx-one-expression-per-line": "off",
        "react/jsx-props-no-spreading": "off",
        "react/prop-types": "off",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "no-unused-expressions": "off",
        "react/jsx-filename-extension": [1, { extensions: [".tsx"] }],
        "import/prefer-default-export": "off",
        "import/no-duplicates": "off",
        "react/display-name": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                allowExpressions: true,
            },
        ],
        "for-direction": "error",
        "no-dupe-args": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-extra-semi": "error",
        "no-template-curly-in-string": "error",
        "array-callback-return": "error",
        "block-scoped-var": "error",
        curly: "error",
        // "indent": [ "error", 4, { "SwitchCase": 1 } ],
        quotes: ["error", "double"],
        semi: ["error", "always"],
        "block-spacing": "error",
        "guard-for-in": "error",
        "no-multi-spaces": "error",
        yoda: "error",
        "array-bracket-spacing": ["error", "never"],
        "space-before-function-paren": [
            "error",
            {
                anonymous: "always",
                named: "never",
                asyncArrow: "always",
            },
        ],
        "keyword-spacing": [
            "error",
            {
                before: true,
                after: true,
            },
        ],
        "space-in-parens": ["error", "never"],
        "comma-spacing": [
            "error",
            {
                before: false,
                after: true,
            },
        ],
        // "no-redeclare": "error",
        "no-trailing-spaces": "error",
        "no-unneeded-ternary": "error",
        "space-before-blocks": "error",
    },
};
